{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\TestPage.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header, Icon } from \"react-native-elements\";\nimport CheckBoxScreen from \"../components/CheckBox\";\n\nvar TestScreen = function (_React$Component) {\n  _inherits(TestScreen, _React$Component);\n\n  var _super = _createSuper(TestScreen);\n\n  function TestScreen() {\n    var _this;\n\n    _classCallCheck(this, TestScreen);\n\n    _this = _super.call(this);\n    _this.state = {\n      questionNo: 1\n    };\n    return _this;\n  }\n\n  _createClass(TestScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.questionNo === 1) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 9\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"white\",\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Drawer\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }\n          }),\n          centerComponent: {\n            text: \"Test\",\n            style: {\n              color: \"yellow\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          backgroundColor: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 11\n          }\n        }, React.createElement(CheckBoxScreen, {\n          question: \"When i'm around people, I still struggle feeling alone\",\n          answere1: \"All The Time\",\n          answere2: \"Sometimes\",\n          answere3: \"Not Really, no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginLeft: \"25%\"\n          }],\n          onPress: function onPress() {\n            var questionNo = _this2.state.questionNo;\n\n            _this2.setState({\n              questionNo: questionNo + 1\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\",\n            marginTop: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }\n        }, \"Next\")));\n      } else if (this.state.questionNo === 2) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 9\n            }\n          }, React.createElement(Header, {\n            leftComponent: React.createElement(Icon, {\n              name: \"arrow-left\",\n              type: \"feather\",\n              color: \"white\",\n              onPress: function onPress() {\n                _this2.props.navigation.navigate(\"Drawer\");\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 15\n              }\n            }),\n            centerComponent: {\n              text: \"Test\",\n              style: {\n                color: \"yellow\",\n                fontSize: 20,\n                fontWeight: \"bold\"\n              }\n            },\n            backgroundColor: \"black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }\n          }), React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 11\n            }\n          }, React.createElement(CheckBoxScreen, {\n            question: \"I feel alone...\",\n            answere1: \"All The Time\",\n            answere2: \"Sometimes\",\n            answere3: \"Not Really, no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 13\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: [styles.button, {\n              marginLeft: \"25%\"\n            }],\n            onPress: function onPress() {\n              var questionNo = _this2.state.questionNo;\n\n              _this2.setState({\n                questionNo: questionNo + 1\n              });\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: {\n              color: \"black\",\n              fontWeight: \"bold\",\n              marginTop: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 13\n            }\n          }, \"Next\")));\n        } else if (this.state.questionNo === 3) {\n            return React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 9\n              }\n            }, React.createElement(Header, {\n              leftComponent: React.createElement(Icon, {\n                name: \"arrow-left\",\n                type: \"feather\",\n                color: \"white\",\n                onPress: function onPress() {\n                  _this2.props.navigation.navigate(\"Drawer\");\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 15\n                }\n              }),\n              centerComponent: {\n                text: \"Test\",\n                style: {\n                  color: \"yellow\",\n                  fontSize: 20,\n                  fontWeight: \"bold\"\n                }\n              },\n              backgroundColor: \"black\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 11\n              }\n            }), React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 11\n              }\n            }, React.createElement(CheckBoxScreen, {\n              question: \"I feel alone...\",\n              answere1: \"All The Time\",\n              answere2: \"Sometimes\",\n              answere3: \"Not Really, no\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 13\n              }\n            })), React.createElement(TouchableOpacity, {\n              style: [styles.button, {\n                marginLeft: \"25%\"\n              }],\n              onPress: function onPress() {\n                var questionNo = _this2.state.questionNo;\n\n                _this2.setState({\n                  questionNo: questionNo + 1\n                });\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 11\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: \"black\",\n                fontWeight: \"bold\",\n                marginTop: 5\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 13\n              }\n            }, \"Next\")));\n          } else if (this.state.questionNo === 4) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 297,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 312,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 313,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 341,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 382,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 385,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 383,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 418,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 444,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 462,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 470,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 473,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 488,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 506,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 514,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 517,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 515,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 532,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 533,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 541,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 561,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 576,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 577,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 605,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 603,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 620,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 621,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 629,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 646,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 649,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 647,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 664,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 665,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 673,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 2) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 690,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 693,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 708,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"I feel alone...\",\n                answere1: \"All The Time\",\n                answere2: \"Sometimes\",\n                answere3: \"Not Really, no\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 709,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 717,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 726,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 735,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 738,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 736,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 753,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  margin: 10,\n                  fontSize: 20,\n                  fontWeight: \"bold\"\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 754,\n                  columnNumber: 13\n                }\n              }, \"Please wait for your answere...\")));\n            }\n    }\n  }]);\n\n  return TestScreen;\n}(React.Component);\n\nexport { TestScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"white\",\n    width: 200,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 5,\n    borderWidth: 5\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/TestPage.js"],"names":["React","Header","Icon","CheckBoxScreen","TestScreen","state","questionNo","props","navigation","navigate","text","style","color","fontSize","fontWeight","styles","button","marginLeft","setState","marginTop","margin","Component","StyleSheet","create","backgroundColor","width","height","alignItems","justifyContent","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Header, Icon } from \"react-native-elements\";\r\nimport CheckBoxScreen from \"../components/CheckBox\";\r\n\r\nexport default class TestScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questionNo: 1,\r\n    };\r\n  }\r\n\r\n  render() {\r\n\r\n    // Question 1\r\n    if (this.state.questionNo === 1) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"When i'm around people, I still struggle feeling alone\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    //question 2\r\n    else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    //Question 3\r\n    else if (this.state.questionNo === 3) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    //question 4\r\n    else if (this.state.questionNo === 4) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n    \r\n    else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n     else {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <Text style={{ margin: 10, fontSize: 20, fontWeight: \"bold\" }}>\r\n              Please wait for your answere...\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n    borderWidth: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}