{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\StartUpScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Header from \"../components/Header\";\n\nvar StartUpScreen = function (_React$Component) {\n  _inherits(StartUpScreen, _React$Component);\n\n  var _super = _createSuper(StartUpScreen);\n\n  function StartUpScreen() {\n    var _this;\n\n    _classCallCheck(this, StartUpScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getUserData = function () {\n      var user = firebase.auth().currentUser;\n      var email = user.email;\n      db.collection(\"Users\").where(\"email\", \"==\", email).get().then(function (snapshot) {\n        snapshot.forEach(function (doc) {\n          _this.setState({\n            docId: doc.id,\n            PerQuestion: doc.data().PerQuestion\n          });\n        });\n      });\n    };\n\n    _this.FinalUpdate = function () {\n      var final = _this.state.finalPoints;\n      var perQues = _this.state.PerQuestion;\n      var finalScore = final + perQues;\n      db.collection(\"Users\").doc(_this.state.docId).update({\n        finalPoints: finalScore\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StartUpScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 7\n        }\n      }, React.createElement(Header, {\n        title: \"How are you feeling??\",\n        navigation: this.props.navigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }\n      }), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }, React.createElement(TouchableOpacity, {\n        style: [styles.button, {\n          marginLeft: \"25%\"\n        }],\n        onPress: function onPress() {\n          _this2.props.navigation.navigate(\"TestPage\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"black\",\n          fontWeight: \"bold\",\n          marginTop: 5\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }\n      }, \"Take A Test\"))));\n    }\n  }]);\n\n  return StartUpScreen;\n}(React.Component);\n\nexport { StartUpScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"white\",\n    width: 200,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 20,\n    borderWidth: 5\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/StartUpScreen.js"],"names":["React","Header","StartUpScreen","getUserData","user","firebase","auth","currentUser","email","db","collection","where","get","then","snapshot","forEach","doc","setState","docId","id","PerQuestion","data","FinalUpdate","final","state","finalPoints","perQues","finalScore","update","props","navigation","styles","button","marginLeft","navigate","color","fontWeight","marginTop","Component","StyleSheet","create","backgroundColor","width","height","alignItems","justifyContent","borderRadius","borderWidth"],"mappings":";;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;;;;;;AAUA,OAAOC,MAAP;;IAEqBC,a;;;;;;;;;;;;;;;;UACnBC,W,GAAc,YAAM;AAClB,UAAIC,IAAI,GAAGC,QAAQ,CAACC,IAAT,GAAgBC,WAA3B;AACA,UAAIC,KAAK,GAAGJ,IAAI,CAACI,KAAjB;AAEAC,MAAAA,EAAE,CAACC,UAAH,CAAc,OAAd,EACGC,KADH,CACS,OADT,EACkB,IADlB,EACwBH,KADxB,EAEGI,GAFH,GAGGC,IAHH,CAGQ,UAACC,QAAD,EAAc;AAClBA,QAAAA,QAAQ,CAACC,OAAT,CAAiB,UAACC,GAAD,EAAS;AACxB,gBAAKC,QAAL,CAAc;AACZC,YAAAA,KAAK,EAAEF,GAAG,CAACG,EADC;AAEZC,YAAAA,WAAW,EAAEJ,GAAG,CAACK,IAAJ,GAAWD;AAFZ,WAAd;AAID,SALD;AAMD,OAVH;AAWD,K;;UAEDE,W,GAAc,YAAM;AAClB,UAAIC,KAAK,GAAG,MAAKC,KAAL,CAAWC,WAAvB;AACA,UAAIC,OAAO,GAAG,MAAKF,KAAL,CAAWJ,WAAzB;AACA,UAAIO,UAAU,GAAGJ,KAAK,GAAGG,OAAzB;AAEAjB,MAAAA,EAAE,CAACC,UAAH,CAAc,OAAd,EAAuBM,GAAvB,CAA2B,MAAKQ,KAAL,CAAWN,KAAtC,EAA6CU,MAA7C,CAAoD;AAClDH,QAAAA,WAAW,EAAEE;AADqC,OAApD;AAGD,K;;;;;;;WAED,6BAAoB;AAClB,WAAKxB,WAAL;AACD;;;WACD,kBAAS;AAAA;;AACP,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,MAAD;AACE,QAAA,KAAK,EAAC,uBADR;AAEE,QAAA,UAAU,EAAE,KAAK0B,KAAL,CAAWC,UAFzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAKE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CAACC,MAAM,CAACC,MAAR,EAAgB;AAAEC,UAAAA,UAAU,EAAE;AAAd,SAAhB,CADT;AAEE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACJ,KAAL,CAAWC,UAAX,CAAsBI,QAAtB,CAA+B,UAA/B;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAME,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,UAAU,EAAE,MAA9B;AAAsCC,UAAAA,SAAS,EAAE;AAAjD,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,CADF,CALF,CADF;AAoBD;;;;EApDwCrC,KAAK,CAACsC,S;;SAA5BpC,a;AAsDrB,IAAM6B,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;AAC/BR,EAAAA,MAAM,EAAE;AACNS,IAAAA,eAAe,EAAE,OADX;AAENC,IAAAA,KAAK,EAAE,GAFD;AAGNC,IAAAA,MAAM,EAAE,EAHF;AAINC,IAAAA,UAAU,EAAE,QAJN;AAKNC,IAAAA,cAAc,EAAE,QALV;AAMNC,IAAAA,YAAY,EAAE,EANR;AAONT,IAAAA,SAAS,EAAE,EAPL;AAQNU,IAAAA,WAAW,EAAE;AARP;AADuB,CAAlB,CAAf","sourcesContent":["import * as React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  StyleSheet,\r\n  TextInput,\r\n  TouchableOpacity,\r\n  FlatList,\r\n  Button,\r\n} from \"react-native\";\r\nimport Header from \"../components/Header\";\r\n\r\nexport default class StartUpScreen extends React.Component {\r\n  getUserData = () => {\r\n    var user = firebase.auth().currentUser;\r\n    var email = user.email;\r\n\r\n    db.collection(\"Users\")\r\n      .where(\"email\", \"==\", email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            docId: doc.id,\r\n            PerQuestion: doc.data().PerQuestion,\r\n          });\r\n        });\r\n      });\r\n  };\r\n\r\n  FinalUpdate = () => {\r\n    var final = this.state.finalPoints;\r\n    var perQues = this.state.PerQuestion;\r\n    var finalScore = final + perQues;\r\n\r\n    db.collection(\"Users\").doc(this.state.docId).update({\r\n      finalPoints: finalScore,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n  }\r\n  render() {\r\n    return (\r\n      <View>\r\n        <Header\r\n          title=\"How are you feeling??\"\r\n          navigation={this.props.navigation}\r\n        />\r\n        <View>\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              this.props.navigation.navigate(\"TestPage\");\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Take A Test\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n    );\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n    marginTop: 20,\r\n    borderWidth: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}