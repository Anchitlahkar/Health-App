{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\TestPage.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Header, Icon } from \"react-native-elements\";\nimport CheckBoxScreen from \"../components/CheckBox\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nvar TestScreen = function (_React$Component) {\n  _inherits(TestScreen, _React$Component);\n\n  var _super = _createSuper(TestScreen);\n\n  function TestScreen() {\n    var _this;\n\n    _classCallCheck(this, TestScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserData = function _callee() {\n      var user, email;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              email = user.email;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"Users\").where(\"email\", \"==\", email).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  _this.setState({\n                    docId: doc.id,\n                    finalPoints: doc.data().finalPoints,\n                    PerQuestion: doc.data().PerQuestion\n                  });\n                });\n              }));\n\n            case 4:\n              console.log(\"PerQuestionFirebase: \" + _this.state.PerQuestion);\n              console.log(\"finalPointsFirebase: \" + _this.state.finalPoints);\n              console.log(\"DocId: \" + _this.state.docId);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.FinalUpdate = function () {\n      var final = _this.state.finalPoints;\n      var perQues = _this.state.PerQuestion;\n      var finalScore = final + perQues;\n      console.log(\"final: \" + final);\n      console.log(\"PerQuestion: \" + perQues);\n      console.log(\"finalScore: \" + finalScore);\n      console.log(\"  \");\n      db.collection(\"Users\").doc(_this.state.docId).update({\n        finalPoints: finalScore\n      });\n    };\n\n    _this.state = {\n      questionNo: 1,\n      finalPoints: 2,\n      PerQuestion: 0,\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TestScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.questionNo === 1) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 9\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"white\",\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Drawer\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }\n          }),\n          centerComponent: {\n            text: \"Test\",\n            style: {\n              color: \"yellow\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          backgroundColor: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        }, React.createElement(CheckBoxScreen, {\n          question: \"When i'm around people, I still struggle feeling alone\",\n          answere1: \"All The Time\",\n          answere2: \"Sometimes\",\n          answere3: \"Not Really, no\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        })), React.createElement(TouchableOpacity, {\n          style: [styles.button, {\n            marginLeft: \"25%\"\n          }],\n          onPress: function onPress() {\n            var questionNo = _this2.state.questionNo;\n\n            _this2.setState({\n              questionNo: questionNo + 1\n            });\n\n            _this2.getUserData();\n\n            _this2.FinalUpdate();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            color: \"black\",\n            fontWeight: \"bold\",\n            marginTop: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, \"Next\")));\n      } else if (this.state.questionNo === 2) {\n          return React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 9\n            }\n          }, React.createElement(Header, {\n            leftComponent: React.createElement(Icon, {\n              name: \"arrow-left\",\n              type: \"feather\",\n              color: \"white\",\n              onPress: function onPress() {\n                _this2.props.navigation.navigate(\"Drawer\");\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 15\n              }\n            }),\n            centerComponent: {\n              text: \"Test\",\n              style: {\n                color: \"yellow\",\n                fontSize: 20,\n                fontWeight: \"bold\"\n              }\n            },\n            backgroundColor: \"black\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 11\n            }\n          }), React.createElement(View, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 11\n            }\n          }, React.createElement(CheckBoxScreen, {\n            question: \"I feel alone...\",\n            answere1: \"All The Time\",\n            answere2: \"Sometimes\",\n            answere3: \"Not Really, no\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }\n          })), React.createElement(TouchableOpacity, {\n            style: [styles.button, {\n              marginLeft: \"25%\"\n            }],\n            onPress: function onPress() {\n              var questionNo = _this2.state.questionNo;\n\n              _this2.setState({\n                questionNo: questionNo + 1\n              });\n\n              _this2.getUserData();\n\n              _this2.FinalUpdate();\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 11\n            }\n          }, React.createElement(Text, {\n            style: {\n              color: \"black\",\n              fontWeight: \"bold\",\n              marginTop: 5\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 13\n            }\n          }, \"Next\")));\n        } else if (this.state.questionNo === 3) {\n            return React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 9\n              }\n            }, React.createElement(Header, {\n              leftComponent: React.createElement(Icon, {\n                name: \"arrow-left\",\n                type: \"feather\",\n                color: \"white\",\n                onPress: function onPress() {\n                  _this2.props.navigation.navigate(\"Drawer\");\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 15\n                }\n              }),\n              centerComponent: {\n                text: \"Test\",\n                style: {\n                  color: \"yellow\",\n                  fontSize: 20,\n                  fontWeight: \"bold\"\n                }\n              },\n              backgroundColor: \"black\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 11\n              }\n            }), React.createElement(View, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 11\n              }\n            }, React.createElement(CheckBoxScreen, {\n              question: \"I have put my friendships on the back burner.\",\n              answere1: \"Yes, clearly\",\n              answere2: \"A bit\",\n              answere3: \"No, not really\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 13\n              }\n            })), React.createElement(TouchableOpacity, {\n              style: [styles.button, {\n                marginLeft: \"25%\"\n              }],\n              onPress: function onPress() {\n                var questionNo = _this2.state.questionNo;\n\n                _this2.setState({\n                  questionNo: questionNo + 1\n                });\n\n                _this2.getUserData();\n\n                _this2.FinalUpdate();\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 11\n              }\n            }, React.createElement(Text, {\n              style: {\n                color: \"black\",\n                fontWeight: \"bold\",\n                marginTop: 5\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 13\n              }\n            }, \"Next\")));\n          } else if (this.state.questionNo === 4) {\n              return React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 9\n                }\n              }, React.createElement(Header, {\n                leftComponent: React.createElement(Icon, {\n                  name: \"arrow-left\",\n                  type: \"feather\",\n                  color: \"white\",\n                  onPress: function onPress() {\n                    _this2.props.navigation.navigate(\"Drawer\");\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 214,\n                    columnNumber: 15\n                  }\n                }),\n                centerComponent: {\n                  text: \"Test\",\n                  style: {\n                    color: \"yellow\",\n                    fontSize: 20,\n                    fontWeight: \"bold\"\n                  }\n                },\n                backgroundColor: \"black\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 11\n                }\n              }), React.createElement(View, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 11\n                }\n              }, React.createElement(CheckBoxScreen, {\n                question: \"My family just doesn't have the same priority in my life as they use to.\",\n                answere1: \"This is Truth\",\n                answere2: \"A bit\",\n                answere3: \"I disagree. My family has remained important\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 13\n                }\n              })), React.createElement(TouchableOpacity, {\n                style: [styles.button, {\n                  marginLeft: \"25%\"\n                }],\n                onPress: function onPress() {\n                  var questionNo = _this2.state.questionNo;\n\n                  _this2.setState({\n                    questionNo: questionNo + 1\n                  });\n\n                  _this2.getUserData();\n\n                  _this2.FinalUpdate();\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 11\n                }\n              }, React.createElement(Text, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"bold\",\n                  marginTop: 5\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 13\n                }\n              }, \"Next\")));\n            } else if (this.state.questionNo === 5) {\n                return React.createElement(View, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 9\n                  }\n                }, React.createElement(Header, {\n                  leftComponent: React.createElement(Icon, {\n                    name: \"arrow-left\",\n                    type: \"feather\",\n                    color: \"white\",\n                    onPress: function onPress() {\n                      _this2.props.navigation.navigate(\"Drawer\");\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 15\n                    }\n                  }),\n                  centerComponent: {\n                    text: \"Test\",\n                    style: {\n                      color: \"yellow\",\n                      fontSize: 20,\n                      fontWeight: \"bold\"\n                    }\n                  },\n                  backgroundColor: \"black\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 261,\n                    columnNumber: 11\n                  }\n                }), React.createElement(View, {\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 11\n                  }\n                }, React.createElement(CheckBoxScreen, {\n                  question: \"People exhaust me\",\n                  answere1: \"Absolutely agee\",\n                  answere2: \"Sometimes\",\n                  answere3: \"Not really, no\",\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 13\n                  }\n                })), React.createElement(TouchableOpacity, {\n                  style: [styles.button, {\n                    marginLeft: \"25%\"\n                  }],\n                  onPress: function onPress() {\n                    var questionNo = _this2.state.questionNo;\n\n                    _this2.setState({\n                      questionNo: questionNo + 1\n                    });\n\n                    _this2.getUserData();\n\n                    _this2.FinalUpdate();\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 11\n                  }\n                }, React.createElement(Text, {\n                  style: {\n                    color: \"black\",\n                    fontWeight: \"bold\",\n                    marginTop: 5\n                  },\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 13\n                  }\n                }, \"Next\")));\n              } else if (this.state.questionNo === 6) {\n                  return React.createElement(View, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 309,\n                      columnNumber: 9\n                    }\n                  }, React.createElement(Header, {\n                    leftComponent: React.createElement(Icon, {\n                      name: \"arrow-left\",\n                      type: \"feather\",\n                      color: \"white\",\n                      onPress: function onPress() {\n                        _this2.props.navigation.navigate(\"Drawer\");\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 312,\n                        columnNumber: 15\n                      }\n                    }),\n                    centerComponent: {\n                      text: \"Test\",\n                      style: {\n                        color: \"yellow\",\n                        fontSize: 20,\n                        fontWeight: \"bold\"\n                      }\n                    },\n                    backgroundColor: \"black\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 310,\n                      columnNumber: 11\n                    }\n                  }), React.createElement(View, {\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 327,\n                      columnNumber: 11\n                    }\n                  }, React.createElement(CheckBoxScreen, {\n                    question: \"My appetite has changed and...\",\n                    answere1: \"Not really\",\n                    answere2: \"I've lost some weight\",\n                    answere3: \"I've gained a little weight\",\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 13\n                    }\n                  })), React.createElement(TouchableOpacity, {\n                    style: [styles.button, {\n                      marginLeft: \"25%\"\n                    }],\n                    onPress: function onPress() {\n                      var questionNo = _this2.state.questionNo;\n\n                      _this2.setState({\n                        questionNo: questionNo + 1\n                      });\n\n                      _this2.getUserData();\n\n                      _this2.FinalUpdate();\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 336,\n                      columnNumber: 11\n                    }\n                  }, React.createElement(Text, {\n                    style: {\n                      color: \"black\",\n                      fontWeight: \"bold\",\n                      marginTop: 5\n                    },\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 13\n                    }\n                  }, \"Next\")));\n                } else if (this.state.questionNo === 7) {\n                    return React.createElement(View, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 358,\n                        columnNumber: 9\n                      }\n                    }, React.createElement(Header, {\n                      leftComponent: React.createElement(Icon, {\n                        name: \"arrow-left\",\n                        type: \"feather\",\n                        color: \"white\",\n                        onPress: function onPress() {\n                          _this2.props.navigation.navigate(\"Drawer\");\n                        },\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 361,\n                          columnNumber: 15\n                        }\n                      }),\n                      centerComponent: {\n                        text: \"Test\",\n                        style: {\n                          color: \"yellow\",\n                          fontSize: 20,\n                          fontWeight: \"bold\"\n                        }\n                      },\n                      backgroundColor: \"black\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 359,\n                        columnNumber: 11\n                      }\n                    }), React.createElement(View, {\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 376,\n                        columnNumber: 11\n                      }\n                    }, React.createElement(CheckBoxScreen, {\n                      question: \"I have given up doing things that I use to be excited about (Sports, Hobbies etc.)\",\n                      answere1: \"Yes, I would say so.\",\n                      answere2: \"A little. Some things.\",\n                      answere3: \"Not Really, no\",\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 377,\n                        columnNumber: 13\n                      }\n                    })), React.createElement(TouchableOpacity, {\n                      style: [styles.button, {\n                        marginLeft: \"25%\"\n                      }],\n                      onPress: function onPress() {\n                        var questionNo = _this2.state.questionNo;\n\n                        _this2.setState({\n                          questionNo: questionNo + 1\n                        });\n\n                        _this2.getUserData();\n\n                        _this2.FinalUpdate();\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 385,\n                        columnNumber: 11\n                      }\n                    }, React.createElement(Text, {\n                      style: {\n                        color: \"black\",\n                        fontWeight: \"bold\",\n                        marginTop: 5\n                      },\n                      __source: {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 13\n                      }\n                    }, \"Next\")));\n                  } else if (this.state.questionNo === 8) {\n                      return React.createElement(View, {\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 407,\n                          columnNumber: 9\n                        }\n                      }, React.createElement(Header, {\n                        leftComponent: React.createElement(Icon, {\n                          name: \"arrow-left\",\n                          type: \"feather\",\n                          color: \"white\",\n                          onPress: function onPress() {\n                            _this2.props.navigation.navigate(\"Drawer\");\n                          },\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 410,\n                            columnNumber: 15\n                          }\n                        }),\n                        centerComponent: {\n                          text: \"Test\",\n                          style: {\n                            color: \"yellow\",\n                            fontSize: 20,\n                            fontWeight: \"bold\"\n                          }\n                        },\n                        backgroundColor: \"black\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 408,\n                          columnNumber: 11\n                        }\n                      }), React.createElement(View, {\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 425,\n                          columnNumber: 11\n                        }\n                      }, React.createElement(CheckBoxScreen, {\n                        question: \"My tastes in audio/visual has turned 'dark.'\",\n                        answere1: \"I would say it has turned darker, yes.\",\n                        answere2: \"Maybe a bit\",\n                        answere3: \"Not Really, no\",\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 426,\n                          columnNumber: 13\n                        }\n                      })), React.createElement(TouchableOpacity, {\n                        style: [styles.button, {\n                          marginLeft: \"25%\"\n                        }],\n                        onPress: function onPress() {\n                          var questionNo = _this2.state.questionNo;\n\n                          _this2.setState({\n                            questionNo: questionNo + 1\n                          });\n\n                          _this2.getUserData();\n\n                          _this2.FinalUpdate();\n                        },\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 434,\n                          columnNumber: 11\n                        }\n                      }, React.createElement(Text, {\n                        style: {\n                          color: \"black\",\n                          fontWeight: \"bold\",\n                          marginTop: 5\n                        },\n                        __source: {\n                          fileName: _jsxFileName,\n                          lineNumber: 445,\n                          columnNumber: 13\n                        }\n                      }, \"Next\")));\n                    } else if (this.state.questionNo === 9) {\n                        return React.createElement(View, {\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 456,\n                            columnNumber: 9\n                          }\n                        }, React.createElement(Header, {\n                          leftComponent: React.createElement(Icon, {\n                            name: \"arrow-left\",\n                            type: \"feather\",\n                            color: \"white\",\n                            onPress: function onPress() {\n                              _this2.props.navigation.navigate(\"Drawer\");\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 459,\n                              columnNumber: 15\n                            }\n                          }),\n                          centerComponent: {\n                            text: \"Test\",\n                            style: {\n                              color: \"yellow\",\n                              fontSize: 20,\n                              fontWeight: \"bold\"\n                            }\n                          },\n                          backgroundColor: \"black\",\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 457,\n                            columnNumber: 11\n                          }\n                        }), React.createElement(View, {\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 474,\n                            columnNumber: 11\n                          }\n                        }, React.createElement(CheckBoxScreen, {\n                          question: \"I want to runaway, but have no idea where I would go...just want to run.\",\n                          answere1: \"I do feel this is true\",\n                          answere2: \"Sometimes\",\n                          answere3: \"Not Really, no\",\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 475,\n                            columnNumber: 13\n                          }\n                        })), React.createElement(TouchableOpacity, {\n                          style: [styles.button, {\n                            marginLeft: \"25%\"\n                          }],\n                          onPress: function onPress() {\n                            var questionNo = _this2.state.questionNo;\n\n                            _this2.setState({\n                              questionNo: questionNo + 1\n                            });\n\n                            _this2.getUserData();\n\n                            _this2.FinalUpdate();\n                          },\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 483,\n                            columnNumber: 11\n                          }\n                        }, React.createElement(Text, {\n                          style: {\n                            color: \"black\",\n                            fontWeight: \"bold\",\n                            marginTop: 5\n                          },\n                          __source: {\n                            fileName: _jsxFileName,\n                            lineNumber: 494,\n                            columnNumber: 13\n                          }\n                        }, \"Next\")));\n                      } else if (this.state.questionNo === 10) {\n                          return React.createElement(View, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 505,\n                              columnNumber: 9\n                            }\n                          }, React.createElement(Header, {\n                            leftComponent: React.createElement(Icon, {\n                              name: \"arrow-left\",\n                              type: \"feather\",\n                              color: \"white\",\n                              onPress: function onPress() {\n                                _this2.props.navigation.navigate(\"Drawer\");\n                              },\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 508,\n                                columnNumber: 15\n                              }\n                            }),\n                            centerComponent: {\n                              text: \"Test\",\n                              style: {\n                                color: \"yellow\",\n                                fontSize: 20,\n                                fontWeight: \"bold\"\n                              }\n                            },\n                            backgroundColor: \"black\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 506,\n                              columnNumber: 11\n                            }\n                          }), React.createElement(View, {\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 523,\n                              columnNumber: 11\n                            }\n                          }, React.createElement(CheckBoxScreen, {\n                            question: \"I feel lost and confused and unable to think through simple tasks\",\n                            answere1: \"I do feel this is true\",\n                            answere2: \"Sometimes\",\n                            answere3: \"Not Really, no\",\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 524,\n                              columnNumber: 13\n                            }\n                          })), React.createElement(TouchableOpacity, {\n                            style: [styles.button, {\n                              marginLeft: \"25%\"\n                            }],\n                            onPress: function onPress() {\n                              var questionNo = _this2.state.questionNo;\n\n                              _this2.setState({\n                                questionNo: questionNo + 1\n                              });\n\n                              _this2.getUserData();\n\n                              _this2.FinalUpdate();\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 532,\n                              columnNumber: 11\n                            }\n                          }, React.createElement(Text, {\n                            style: {\n                              color: \"black\",\n                              fontWeight: \"bold\",\n                              marginTop: 5\n                            },\n                            __source: {\n                              fileName: _jsxFileName,\n                              lineNumber: 543,\n                              columnNumber: 13\n                            }\n                          }, \"Next\")));\n                        } else if (this.state.questionNo === 11) {\n                            return React.createElement(View, {\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 554,\n                                columnNumber: 9\n                              }\n                            }, React.createElement(Header, {\n                              leftComponent: React.createElement(Icon, {\n                                name: \"arrow-left\",\n                                type: \"feather\",\n                                color: \"white\",\n                                onPress: function onPress() {\n                                  _this2.props.navigation.navigate(\"Drawer\");\n                                },\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 557,\n                                  columnNumber: 15\n                                }\n                              }),\n                              centerComponent: {\n                                text: \"Test\",\n                                style: {\n                                  color: \"yellow\",\n                                  fontSize: 20,\n                                  fontWeight: \"bold\"\n                                }\n                              },\n                              backgroundColor: \"black\",\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 555,\n                                columnNumber: 11\n                              }\n                            }), React.createElement(View, {\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 572,\n                                columnNumber: 11\n                              }\n                            }, React.createElement(CheckBoxScreen, {\n                              question: \"I'm not invested into personal hygiene anymore\",\n                              answere1: \"Sad but yes, it's true\",\n                              answere2: \"Sometimes\",\n                              answere3: \"No, I'm all clean here\",\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 573,\n                                columnNumber: 13\n                              }\n                            })), React.createElement(TouchableOpacity, {\n                              style: [styles.button, {\n                                marginLeft: \"25%\"\n                              }],\n                              onPress: function onPress() {\n                                var questionNo = _this2.state.questionNo;\n\n                                _this2.setState({\n                                  questionNo: questionNo + 1\n                                });\n\n                                _this2.getUserData();\n\n                                _this2.FinalUpdate();\n                              },\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 581,\n                                columnNumber: 11\n                              }\n                            }, React.createElement(Text, {\n                              style: {\n                                color: \"black\",\n                                fontWeight: \"bold\",\n                                marginTop: 5\n                              },\n                              __source: {\n                                fileName: _jsxFileName,\n                                lineNumber: 592,\n                                columnNumber: 13\n                              }\n                            }, \"Next\")));\n                          } else if (this.state.questionNo === 12) {\n                              return React.createElement(View, {\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 603,\n                                  columnNumber: 9\n                                }\n                              }, React.createElement(Header, {\n                                leftComponent: React.createElement(Icon, {\n                                  name: \"arrow-left\",\n                                  type: \"feather\",\n                                  color: \"white\",\n                                  onPress: function onPress() {\n                                    _this2.props.navigation.navigate(\"Drawer\");\n                                  },\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 606,\n                                    columnNumber: 15\n                                  }\n                                }),\n                                centerComponent: {\n                                  text: \"Test\",\n                                  style: {\n                                    color: \"yellow\",\n                                    fontSize: 20,\n                                    fontWeight: \"bold\"\n                                  }\n                                },\n                                backgroundColor: \"black\",\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 604,\n                                  columnNumber: 11\n                                }\n                              }), React.createElement(View, {\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 621,\n                                  columnNumber: 11\n                                }\n                              }, React.createElement(CheckBoxScreen, {\n                                question: \"I feel like crying for no reason\",\n                                answere1: \"Yes, this is true\",\n                                answere2: \"Sometimes\",\n                                answere3: \"Not Really, no\",\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 622,\n                                  columnNumber: 13\n                                }\n                              })), React.createElement(TouchableOpacity, {\n                                style: [styles.button, {\n                                  marginLeft: \"25%\"\n                                }],\n                                onPress: function onPress() {\n                                  var questionNo = _this2.state.questionNo;\n\n                                  _this2.setState({\n                                    questionNo: questionNo + 1\n                                  });\n\n                                  _this2.getUserData();\n\n                                  _this2.FinalUpdate();\n                                },\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 630,\n                                  columnNumber: 11\n                                }\n                              }, React.createElement(Text, {\n                                style: {\n                                  color: \"black\",\n                                  fontWeight: \"bold\",\n                                  marginTop: 5\n                                },\n                                __source: {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 641,\n                                  columnNumber: 13\n                                }\n                              }, \"Next\")));\n                            } else if (this.state.questionNo === 13) {\n                                return React.createElement(View, {\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 652,\n                                    columnNumber: 9\n                                  }\n                                }, React.createElement(Header, {\n                                  leftComponent: React.createElement(Icon, {\n                                    name: \"arrow-left\",\n                                    type: \"feather\",\n                                    color: \"white\",\n                                    onPress: function onPress() {\n                                      _this2.props.navigation.navigate(\"Drawer\");\n                                    },\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 655,\n                                      columnNumber: 15\n                                    }\n                                  }),\n                                  centerComponent: {\n                                    text: \"Test\",\n                                    style: {\n                                      color: \"yellow\",\n                                      fontSize: 20,\n                                      fontWeight: \"bold\"\n                                    }\n                                  },\n                                  backgroundColor: \"black\",\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 653,\n                                    columnNumber: 11\n                                  }\n                                }), React.createElement(View, {\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 670,\n                                    columnNumber: 11\n                                  }\n                                }, React.createElement(CheckBoxScreen, {\n                                  question: \"My chest feels heavy and it's hard to breath.\",\n                                  answere1: \"Yes\",\n                                  answere2: \"Sometimes\",\n                                  answere3: \"Not Really, no\",\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 671,\n                                    columnNumber: 13\n                                  }\n                                })), React.createElement(TouchableOpacity, {\n                                  style: [styles.button, {\n                                    marginLeft: \"25%\"\n                                  }],\n                                  onPress: function onPress() {\n                                    var questionNo = _this2.state.questionNo;\n\n                                    _this2.setState({\n                                      questionNo: questionNo + 1\n                                    });\n\n                                    _this2.getUserData();\n\n                                    _this2.FinalUpdate();\n                                  },\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 679,\n                                    columnNumber: 11\n                                  }\n                                }, React.createElement(Text, {\n                                  style: {\n                                    color: \"black\",\n                                    fontWeight: \"bold\",\n                                    marginTop: 5\n                                  },\n                                  __source: {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 690,\n                                    columnNumber: 13\n                                  }\n                                }, \"Next\")));\n                              } else if (this.state.questionNo === 14) {\n                                  return React.createElement(View, {\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 701,\n                                      columnNumber: 9\n                                    }\n                                  }, React.createElement(Header, {\n                                    leftComponent: React.createElement(Icon, {\n                                      name: \"arrow-left\",\n                                      type: \"feather\",\n                                      color: \"white\",\n                                      onPress: function onPress() {\n                                        _this2.props.navigation.navigate(\"Drawer\");\n                                      },\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 704,\n                                        columnNumber: 15\n                                      }\n                                    }),\n                                    centerComponent: {\n                                      text: \"Test\",\n                                      style: {\n                                        color: \"yellow\",\n                                        fontSize: 20,\n                                        fontWeight: \"bold\"\n                                      }\n                                    },\n                                    backgroundColor: \"black\",\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 702,\n                                      columnNumber: 11\n                                    }\n                                  }), React.createElement(View, {\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 719,\n                                      columnNumber: 11\n                                    }\n                                  }, React.createElement(CheckBoxScreen, {\n                                    question: \"I feel defeated\",\n                                    answere1: \"I surely do.\",\n                                    answere2: \"A bit\",\n                                    answere3: \"Not Really, no\",\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 720,\n                                      columnNumber: 13\n                                    }\n                                  })), React.createElement(TouchableOpacity, {\n                                    style: [styles.button, {\n                                      marginLeft: \"25%\"\n                                    }],\n                                    onPress: function onPress() {\n                                      var questionNo = _this2.state.questionNo;\n\n                                      _this2.setState({\n                                        questionNo: questionNo + 1\n                                      });\n\n                                      _this2.getUserData();\n\n                                      _this2.FinalUpdate();\n                                    },\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 728,\n                                      columnNumber: 11\n                                    }\n                                  }, React.createElement(Text, {\n                                    style: {\n                                      color: \"black\",\n                                      fontWeight: \"bold\",\n                                      marginTop: 5\n                                    },\n                                    __source: {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 739,\n                                      columnNumber: 13\n                                    }\n                                  }, \"Next\")));\n                                } else if (this.state.questionNo === 15) {\n                                    return React.createElement(View, {\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 750,\n                                        columnNumber: 9\n                                      }\n                                    }, React.createElement(Header, {\n                                      leftComponent: React.createElement(Icon, {\n                                        name: \"arrow-left\",\n                                        type: \"feather\",\n                                        color: \"white\",\n                                        onPress: function onPress() {\n                                          _this2.props.navigation.navigate(\"Drawer\");\n                                        },\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 753,\n                                          columnNumber: 15\n                                        }\n                                      }),\n                                      centerComponent: {\n                                        text: \"Test\",\n                                        style: {\n                                          color: \"yellow\",\n                                          fontSize: 20,\n                                          fontWeight: \"bold\"\n                                        }\n                                      },\n                                      backgroundColor: \"black\",\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 751,\n                                        columnNumber: 11\n                                      }\n                                    }), React.createElement(View, {\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 768,\n                                        columnNumber: 11\n                                      }\n                                    }, React.createElement(CheckBoxScreen, {\n                                      question: \"I'm dealing with my possible depression with...\",\n                                      answere1: \"Seeking a spiritual power\",\n                                      answere2: \"Nothing. I'm lost\",\n                                      answere3: \"Self help books\",\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 769,\n                                        columnNumber: 13\n                                      }\n                                    })), React.createElement(TouchableOpacity, {\n                                      style: [styles.button, {\n                                        marginLeft: \"25%\"\n                                      }],\n                                      onPress: function onPress() {\n                                        var questionNo = _this2.state.questionNo;\n\n                                        _this2.setState({\n                                          questionNo: questionNo + 1\n                                        });\n\n                                        _this2.getUserData();\n\n                                        _this2.FinalUpdate();\n                                      },\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 777,\n                                        columnNumber: 11\n                                      }\n                                    }, React.createElement(Text, {\n                                      style: {\n                                        color: \"black\",\n                                        fontWeight: \"bold\",\n                                        marginTop: 5\n                                      },\n                                      __source: {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 788,\n                                        columnNumber: 13\n                                      }\n                                    }, \"Next\")));\n                                  } else if (this.state.questionNo === 16) {\n                                      return React.createElement(View, {\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 799,\n                                          columnNumber: 9\n                                        }\n                                      }, React.createElement(Header, {\n                                        leftComponent: React.createElement(Icon, {\n                                          name: \"arrow-left\",\n                                          type: \"feather\",\n                                          color: \"white\",\n                                          onPress: function onPress() {\n                                            _this2.props.navigation.navigate(\"Drawer\");\n                                          },\n                                          __source: {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 802,\n                                            columnNumber: 15\n                                          }\n                                        }),\n                                        centerComponent: {\n                                          text: \"Test\",\n                                          style: {\n                                            color: \"yellow\",\n                                            fontSize: 20,\n                                            fontWeight: \"bold\"\n                                          }\n                                        },\n                                        backgroundColor: \"black\",\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 800,\n                                          columnNumber: 11\n                                        }\n                                      }), React.createElement(View, {\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 817,\n                                          columnNumber: 11\n                                        }\n                                      }, React.createElement(CheckBoxScreen, {\n                                        question: \"Do you believe in a God that cares about your mental health?\",\n                                        answere1: \"Yes\",\n                                        answere2: \"Sometimes\",\n                                        answere3: \"No\",\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 818,\n                                          columnNumber: 13\n                                        }\n                                      })), React.createElement(TouchableOpacity, {\n                                        style: [styles.button, {\n                                          marginLeft: \"25%\"\n                                        }],\n                                        onPress: function onPress() {\n                                          var questionNo = _this2.state.questionNo;\n\n                                          _this2.setState({\n                                            questionNo: questionNo + 1\n                                          });\n\n                                          _this2.getUserData();\n\n                                          _this2.FinalUpdate();\n                                        },\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 826,\n                                          columnNumber: 11\n                                        }\n                                      }, React.createElement(Text, {\n                                        style: {\n                                          color: \"black\",\n                                          fontWeight: \"bold\",\n                                          marginTop: 5\n                                        },\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 837,\n                                          columnNumber: 13\n                                        }\n                                      }, \"Submit\")));\n                                    } else {\n                                      return React.createElement(View, {\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 845,\n                                          columnNumber: 9\n                                        }\n                                      }, React.createElement(Header, {\n                                        leftComponent: React.createElement(Icon, {\n                                          name: \"arrow-left\",\n                                          type: \"feather\",\n                                          color: \"white\",\n                                          onPress: function onPress() {\n                                            _this2.props.navigation.navigate(\"Drawer\");\n                                          },\n                                          __source: {\n                                            fileName: _jsxFileName,\n                                            lineNumber: 848,\n                                            columnNumber: 15\n                                          }\n                                        }),\n                                        centerComponent: {\n                                          text: \"Test\",\n                                          style: {\n                                            color: \"yellow\",\n                                            fontSize: 20,\n                                            fontWeight: \"bold\"\n                                          }\n                                        },\n                                        backgroundColor: \"black\",\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 846,\n                                          columnNumber: 11\n                                        }\n                                      }), React.createElement(View, {\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 863,\n                                          columnNumber: 11\n                                        }\n                                      }, React.createElement(Text, {\n                                        style: {\n                                          margin: 10,\n                                          fontSize: 20,\n                                          fontWeight: \"bold\"\n                                        },\n                                        __source: {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 864,\n                                          columnNumber: 13\n                                        }\n                                      }, \"Please wait for your answere...\")));\n                                    }\n    }\n  }]);\n\n  return TestScreen;\n}(React.Component);\n\nexport { TestScreen as default };\nvar styles = StyleSheet.create({\n  button: {\n    backgroundColor: \"white\",\n    width: 200,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 10,\n    marginTop: 5,\n    borderWidth: 5\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/TestPage.js"],"names":["React","Header","Icon","CheckBoxScreen","db","firebase","TestScreen","getUserData","user","auth","currentUser","email","collection","where","get","then","snapshot","forEach","doc","setState","docId","id","finalPoints","data","PerQuestion","console","log","state","FinalUpdate","final","perQues","finalScore","update","questionNo","props","navigation","navigate","text","style","color","fontSize","fontWeight","styles","button","marginLeft","marginTop","margin","Component","StyleSheet","create","backgroundColor","width","height","alignItems","justifyContent","borderRadius","borderWidth"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, StyleSheet, TouchableOpacity } from \"react-native\";\r\nimport { Header, Icon } from \"react-native-elements\";\r\nimport CheckBoxScreen from \"../components/CheckBox\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class TestScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      questionNo: 1,\r\n      finalPoints: 2,\r\n      PerQuestion: 0,\r\n      docId: \"\",\r\n    };\r\n  }\r\n\r\n  getUserData = async() => {\r\n    var user = firebase.auth().currentUser;\r\n    var email = user.email;\r\n\r\n    await db.collection(\"Users\")\r\n      .where(\"email\", \"==\", email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            docId: doc.id,\r\n            finalPoints: doc.data().finalPoints,\r\n            PerQuestion: doc.data().PerQuestion,\r\n          });\r\n        });\r\n      });\r\n    console.log(\"PerQuestionFirebase: \" + this.state.PerQuestion);\r\n    console.log(\"finalPointsFirebase: \" + this.state.finalPoints);\r\n    console.log(\"DocId: \" + this.state.docId);\r\n  };\r\n\r\n  FinalUpdate = () => {\r\n    var final = this.state.finalPoints;\r\n    var perQues = this.state.PerQuestion;\r\n    var finalScore = final + perQues;\r\n\r\n    console.log(\"final: \" + final);\r\n    console.log(\"PerQuestion: \" + perQues);\r\n    console.log(\"finalScore: \" + finalScore);\r\n    console.log(\"  \")\r\n\r\n\r\n    db.collection(\"Users\").doc(this.state.docId).update({\r\n      finalPoints: finalScore,\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n  }\r\n\r\n  render() {\r\n    // Question 1\r\n    if (this.state.questionNo === 1) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"When i'm around people, I still struggle feeling alone\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //question 2\r\n    else if (this.state.questionNo === 2) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel alone...\"\r\n              answere1=\"All The Time\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 3\r\n    else if (this.state.questionNo === 3) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I have put my friendships on the back burner.\"\r\n              answere1=\"Yes, clearly\"\r\n              answere2=\"A bit\"\r\n              answere3=\"No, not really\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //question 4\r\n    else if (this.state.questionNo === 4) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"My family just doesn't have the same priority in my life as they use to.\"\r\n              answere1=\"This is Truth\"\r\n              answere2=\"A bit\"\r\n              answere3=\"I disagree. My family has remained important\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 5\r\n    else if (this.state.questionNo === 5) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"People exhaust me\"\r\n              answere1=\"Absolutely agee\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 6\r\n    else if (this.state.questionNo === 6) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"My appetite has changed and...\"\r\n              answere1=\"Not really\"\r\n              answere2=\"I've lost some weight\"\r\n              answere3=\"I've gained a little weight\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 7\r\n    else if (this.state.questionNo === 7) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I have given up doing things that I use to be excited about (Sports, Hobbies etc.)\"\r\n              answere1=\"Yes, I would say so.\"\r\n              answere2=\"A little. Some things.\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 8\r\n    else if (this.state.questionNo === 8) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"My tastes in audio/visual has turned 'dark.'\"\r\n              answere1=\"I would say it has turned darker, yes.\"\r\n              answere2=\"Maybe a bit\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 9\r\n    else if (this.state.questionNo === 9) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I want to runaway, but have no idea where I would go...just want to run.\"\r\n              answere1=\"I do feel this is true\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 10\r\n    else if (this.state.questionNo === 10) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel lost and confused and unable to think through simple tasks\"\r\n              answere1=\"I do feel this is true\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 11\r\n    else if (this.state.questionNo === 11) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I'm not invested into personal hygiene anymore\"\r\n              answere1=\"Sad but yes, it's true\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"No, I'm all clean here\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 12\r\n    else if (this.state.questionNo === 12) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel like crying for no reason\"\r\n              answere1=\"Yes, this is true\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 13\r\n    else if (this.state.questionNo === 13) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"My chest feels heavy and it's hard to breath.\"\r\n              answere1=\"Yes\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 14\r\n    else if (this.state.questionNo === 14) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I feel defeated\"\r\n              answere1=\"I surely do.\"\r\n              answere2=\"A bit\"\r\n              answere3=\"Not Really, no\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 15\r\n    else if (this.state.questionNo === 15) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"I'm dealing with my possible depression with...\"\r\n              answere1=\"Seeking a spiritual power\"\r\n              answere2=\"Nothing. I'm lost\"\r\n              answere3=\"Self help books\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Next\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    //Question 16\r\n    else if (this.state.questionNo === 16) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <CheckBoxScreen\r\n              question=\"Do you believe in a God that cares about your mental health?\"\r\n              answere1=\"Yes\"\r\n              answere2=\"Sometimes\"\r\n              answere3=\"No\"\r\n            />\r\n          </View>\r\n\r\n          <TouchableOpacity\r\n            style={[styles.button, { marginLeft: \"25%\" }]}\r\n            onPress={() => {\r\n              const questionNo = this.state.questionNo;\r\n              this.setState({\r\n                questionNo: questionNo + 1,\r\n              });\r\n              this.getUserData();\r\n              this.FinalUpdate();\r\n            }}\r\n          >\r\n            <Text style={{ color: \"black\", fontWeight: \"bold\", marginTop: 5 }}>\r\n              Submit\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <View>\r\n            <Text style={{ margin: 10, fontSize: 20, fontWeight: \"bold\" }}>\r\n              Please wait for your answere...\r\n            </Text>\r\n          </View>\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\nconst styles = StyleSheet.create({\r\n  button: {\r\n    backgroundColor: \"white\",\r\n    width: 200,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    borderRadius: 10,\r\n    marginTop: 5,\r\n    borderWidth: 5,\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}