{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Apps\\\\health-app\\\\health-app\\\\screens\\\\ResultScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Header, Icon } from \"react-native-elements\";\nimport db from \"../config\";\nimport firebase from \"firebase\";\n\nvar ResultScreen = function (_React$Component) {\n  _inherits(ResultScreen, _React$Component);\n\n  var _super = _createSuper(ResultScreen);\n\n  function ResultScreen() {\n    var _this;\n\n    _classCallCheck(this, ResultScreen);\n\n    _this = _super.call(this);\n\n    _this.getUserData = function _callee() {\n      var user, email;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              user = firebase.auth().currentUser;\n              email = user.email;\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(db.collection(\"Users\").where(\"email\", \"==\", email).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  _this.setState({\n                    docId: doc.id,\n                    PerQuestion: doc.data().PerQuestion,\n                    finalPoints: doc.data().FINALSCORE\n                  });\n                });\n              }));\n\n            case 4:\n              console.log(\"finalPointsFirebase: \" + _this.state.finalPoints);\n              console.log(\"DocId: \" + _this.state.docId);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      finalPoints: 0,\n      docId: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(ResultScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getUserData();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.state.finalPoints > 10 && this.state.finalPoints < 25) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 9\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"white\",\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Drawer\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }\n          }),\n          centerComponent: {\n            text: \"Test\",\n            style: {\n              color: \"yellow\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          backgroundColor: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontWeight: \"bold\",\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        }, \"Your Test RESULTS\"), React.createElement(View, {\n          style: {\n            borderWidth: 2,\n            borderColor: \"green\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          style: {\n            fontSize: fontSize\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }, \"Low Range Depression\")), React.createElement(Image, {\n          style: styles.logo,\n          source: require(\"../assets/Low.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 11\n          }\n        }));\n      } else if (this.state.finalPoints >= 32) {\n        return React.createElement(View, {\n          style: {\n            height: 500,\n            width: \"100%\",\n            borderWidth: 5\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"white\",\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Drawer\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }\n          }),\n          centerComponent: {\n            text: \"Test\",\n            style: {\n              color: \"yellow\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          backgroundColor: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, this.state.finalPoints), React.createElement(Image, {\n          style: styles.logo,\n          source: require(\"../assets/mid.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }\n        }));\n      } else {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 9\n          }\n        }, React.createElement(Header, {\n          leftComponent: React.createElement(Icon, {\n            name: \"arrow-left\",\n            type: \"feather\",\n            color: \"white\",\n            onPress: function onPress() {\n              _this2.props.navigation.navigate(\"Drawer\");\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }\n          }),\n          centerComponent: {\n            text: \"Test\",\n            style: {\n              color: \"yellow\",\n              fontSize: 20,\n              fontWeight: \"bold\"\n            }\n          },\n          backgroundColor: \"black\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 11\n          }\n        }), React.createElement(Text, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }, \"Score: \", this.state.finalPoints), React.createElement(Image, {\n          style: styles.logo,\n          source: require(\"../assets/Low.jpg\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return ResultScreen;\n}(React.Component);\n\nexport { ResultScreen as default };\nvar styles = StyleSheet.create({\n  logo: {\n    height: 150,\n    width: 200,\n    margin: 20,\n    alignSelf: \"center\"\n  }\n});","map":{"version":3,"sources":["D:/Apps/health-app/health-app/screens/ResultScreen.js"],"names":["React","Header","Icon","db","firebase","ResultScreen","getUserData","user","auth","currentUser","email","collection","where","get","then","snapshot","forEach","doc","setState","docId","id","PerQuestion","data","finalPoints","FINALSCORE","console","log","state","props","navigation","navigate","text","style","color","fontSize","fontWeight","textAlign","borderWidth","borderColor","styles","logo","require","height","width","Component","StyleSheet","create","margin","alignSelf"],"mappings":"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","sourcesContent":["import * as React from \"react\";\r\nimport { Text, View, Image, StyleSheet } from \"react-native\";\r\nimport { Header, Icon } from \"react-native-elements\";\r\nimport db from \"../config\";\r\nimport firebase from \"firebase\";\r\n\r\nexport default class ResultScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      finalPoints: 0,\r\n      docId: \"\",\r\n    };\r\n  }\r\n\r\n  getUserData = async () => {\r\n    var user = firebase.auth().currentUser;\r\n    var email = user.email;\r\n\r\n    await db\r\n      .collection(\"Users\")\r\n      .where(\"email\", \"==\", email)\r\n      .get()\r\n      .then((snapshot) => {\r\n        snapshot.forEach((doc) => {\r\n          this.setState({\r\n            docId: doc.id,\r\n            PerQuestion: doc.data().PerQuestion,\r\n            finalPoints: doc.data().FINALSCORE,\r\n          });\r\n        });\r\n      });\r\n    console.log(\"finalPointsFirebase: \" + this.state.finalPoints);\r\n    console.log(\"DocId: \" + this.state.docId);\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getUserData();\r\n  }\r\n\r\n  render() {\r\n    if (this.state.finalPoints > 10 && this.state.finalPoints < 25) {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n\r\n          <Text\r\n            style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: 30 }}\r\n          >\r\n            Your Test RESULTS\r\n          </Text>\r\n\r\n          <View style={{ borderWidth: 2, borderColor: \"green\" }}>\r\n            <Text style={{fontSize}}>Low Range Depression</Text>\r\n          </View>\r\n\r\n          <Image style={styles.logo} source={require(\"../assets/Low.jpg\")} />\r\n        </View>\r\n      );\r\n    } else if (this.state.finalPoints >= 32) {\r\n      return (\r\n        <View style={{ height: 500, width: \"100%\", borderWidth: 5 }}>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <Text>{this.state.finalPoints}</Text>\r\n          <Image style={styles.logo} source={require(\"../assets/mid.jpg\")} />\r\n        </View>\r\n      );\r\n    } else {\r\n      return (\r\n        <View>\r\n          <Header\r\n            leftComponent={\r\n              <Icon\r\n                name=\"arrow-left\"\r\n                type=\"feather\"\r\n                color=\"white\"\r\n                onPress={() => {\r\n                  this.props.navigation.navigate(\"Drawer\");\r\n                }}\r\n              />\r\n            }\r\n            centerComponent={{\r\n              text: \"Test\",\r\n              style: { color: \"yellow\", fontSize: 20, fontWeight: \"bold\" },\r\n            }}\r\n            backgroundColor=\"black\"\r\n          />\r\n          <Text>Score: {this.state.finalPoints}</Text>\r\n          <Image style={styles.logo} source={require(\"../assets/Low.jpg\")} />\r\n        </View>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  logo: {\r\n    height: 150,\r\n    width: 200,\r\n    margin: 20,\r\n    alignSelf: \"center\",\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}